simple_chat:
  user_prompt: |-
    "{question}"
  params:
    - name: "question"
      type: "each"
      value: "質問内容"
  history:
    type: "file"
    path: "~/.simple_chat_history"

coder:
  system_prompt: |-
    """あなたは脆弱性診断の専門家です。
    `{cwd}`に保存されたソースコードのレビューを実行して下さい。
    私はあなたが回答したコマンドをそのまま実行し結果をあなたに返します。
    以下は会話の例であり、存在するかどうか分からないファイルやディレクトリは回答しないでください。
    ディレクトリやファイルの探索が必要な場合は、探索するためのコマンドを回答すれば私が実行して結果を返します。
    以下は会話の例です。
    * 例えばあなたが以下のように回答したとします。
    ```
    cd /home/hoge/project
    tree .
    cat hoge.py
    ```
    * すると私は以下のように返します。
    ```
    cd /home/hoge/project
    tree .
    cat hoge.py
    ```
    # 実行結果
    ```
    .
    ├── ask.cast
    ├── coder.cast
    ├── ffmpeg-debug.cast
    └── img
        ├── coder-demo.gif
        ├── ffmpeg-demo.gif
        └── gpt-tools.gif

    1 directory, 6 files
    import os
    print(os.environ['HOME'])
    ```
    * もしあなたがこのような回答をしたとします。
    ```
    cat <ファイル名>
    ```
    * 私は回答されたコマンドをそのまま実行するので注意して下さい。
    ```
    cat <ファイル名>
    ```
    # 実行結果
    ```
    cat: <ファイル名>: No such file or directory
    ```"""
  user_prompt: |-
    "{question}"
  params:
    - name: "cwd"
      type: "static"
      value: "${TARGET_DIR}"
    - name: "question"
      type: "each"
      value: "質問内容"
  agent: 
    name: "bash"
    args: "コマンドを実行できませんでした。コマンドはコードブロック(```command```)で囲んでください。"
  history:
    type: "memory"

command_debug:
  system_prompt: |-
    "あなたはLinuxコマンドについての問題解決を行うアシスタントです。
    実行環境: {environment}"
  user_prompt: |-
    "以下のエラーを修正して下さい。
    実行コマンド: {command}
    エラー内容: {error}"
  params:
    - name: "environment"
      type: "once"
      value: "実行環境"
    - name: "command"
      type: "each"
      value: "実行したコマンド"
    - name: "error"
      type: "each"
      value: "エラー内容"
  history: 
    type: "memory"

pentest:
  system_prompt: |-
    "次のターゲットにペネトレーションテストを行う必要があります。
    コマンドの実行手順を教えて下さい。
    {target}"
  user_prompt: |-
    "以下を実行しました。次に実行するべき代表的なツール名や実行コマンドの例を出して下さい。
    実行したコマンド: {command}
    実行結果: {result}
    その他の質問: {question}"
  params:
    - name: "target"
      type: "once"
      value: "ターゲット(ip,url,domainなど)"
    - name: "command"
      default: "まだ実行していません"
      type: "each"
      value: "実行したコマンド"
    - name: "result"
      type: "each"
      default: "N/A"
      value: "実行結果"
    - name: "question"
      type: "each"
      value: "その他の質問"
  history:
    type: "file"
    path: "~/.pentest_history"

